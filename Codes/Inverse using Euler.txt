import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    public static int mod=(int)1000000007;
    static long fact[]=new long[6000000];
    static long invfact[]=new long[6000000];
    
    static long ncr(long n,long r){
        return (fact[(int)n]*((invfact[(int)r])%mod*invfact[(int)(n-r)]%mod))%mod;
    }

    static long countSubs(String s){
        // Complete this function
        long a=0,b=0,c=0,d=0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='a') a++;
             if(s.charAt(i)=='b') b++;
             if(s.charAt(i)=='c') c++;
             if(s.charAt(i)=='d') d++;
        }
        long ans1=ncr(a+b,b)%mod;
        long ans2=ncr(c+d,d)%mod;
        //System.out.println(ans1);
        //System.out.println(ans2);
        long ans=(ans1*ans2-1+mod)%mod;
        return ans;
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        fact[0]=1;
        Arrays.fill(invfact,1);
        for(int i=2;i<6000000;i++){
            invfact[i] = (-(mod / i) * invfact[mod % i] % mod)+mod;
        }
        for(int i=1;i<6000000;i++){
            fact[i]=(fact[i-1]*i)%mod;
            invfact[i] = invfact[i-1]% mod * invfact[i] % mod;
        }

        int q = in.nextInt();
        for(int a0 = 0; a0 < q; a0++){
            String s = in.next();
            long result = countSubs(s);
            System.out.println(result);
        }
    }
}
