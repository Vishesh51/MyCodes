#include <iostream>
#include <cmath>
using namespace std;

int BinarySearch(int L[], int left, int right, int key){

    if(right - left > 0){

        int mid = (left + right) / 2;

        if(key > L[mid]){

            BinarySearch(L, mid + 1, right, key);

        } else if(key < L[mid]){

            BinarySearch(L, left, mid, key);

        } else {

            return mid;

        }

    } else {

        return -1;

    }

}

int TernarySearch(int L[], int left, int right, int key)
{

    if(right - left > 0){

        int midFirst = left + (right - left) / 3;
        int midSecond = midFirst + (right - left) / 3;

        if (L[midFirst] == key){
            return midFirst;
        }

        if (L[midSecond] == key){
            return midSecond;
        }

        if (L[midFirst] > key){
            return TernarySearch(L, left, midFirst, key);
        }

        if (L[midSecond] < key){
            return TernarySearch(L, midSecond + 1, right, key);
        }

        return TernarySearch(L, midFirst, midSecond, key);

    } else {

        return -1;

    }

}

int main()
{

    int L[] = {0, 1, 2, 3, 4, 5, 8, 13, 21, 34, 55};
    //int L[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    int left = 0;
    int right = sizeof(L) / sizeof(L[0]);

    int key = 0;

    int x;
    if((x = TernarySearch(L, left, right, key)) == -1 ){

        cout << "Key doesn't exist"<< endl;

    } else {

        cout << "The position of Key is " << x << endl;

    }

return 0; }



